// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  status    Status   @default(PENDING)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  size           String[]
  discount       Float    @default(0)
  color          String
  price          Float
  thumbnailImage String?
  productImages  String[] @default([])
  category       String
  status         Status   @default(ACTIVE)
  gender         Gender
  isFeature      Boolean? @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Items          Items[]
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  gender    Gender
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  paymentId  String
  totalPrice Int
  items      Items[]
  info       Json
  isPayment  Boolean  @default(true)
  status     Status   @default(PENDING)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Items {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  productId      String  @db.ObjectId
  quantity       Int
  price          Float
  productDetails Product @relation(fields: [productId], references: [id])
  Order          Order   @relation(fields: [orderId], references: [id])
  orderId        String  @db.ObjectId
}

enum Role {
  USER
  ADMIN
}

enum Status {
  PENDING
  ACTIVE
  BLOCKED
}

enum Gender {
  MALE
  FEMALE
}
